// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`appendFittedText Should not mutate data Should works with text, radius, class parameters as value without data in selection Should render correctly 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data add span 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g><text class="fitted-text mocked_css_class_value2" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.8074017006186525)"><tspan x="0" y="3.6000000000000005">mocked_text_value2</tspan></text></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data add span 2`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g><text class="fitted-text mocked_css_class_value3" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(3.6041081248656432)"><tspan x="0" y="-2.3999999999999995">mocked text value</tspan><tspan x="0" y="9.600000000000001">3</tspan></text></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data add text div 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data add text div 2`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g><text class="fitted-text mocked_css_class_value2" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.8074017006186525)"><tspan x="0" y="3.6000000000000005">mocked_text_value2</tspan></text></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data changed 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g><text class="fitted-text mocked_css_class_value2" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.8074017006186525)"><tspan x="0" y="3.6000000000000005">mocked_text_value2</tspan></text></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data changed 2`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g><text class="fitted-text mocked_css_class_value3" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.899851733322857)"><tspan x="0" y="3.6000000000000005">mocked_text_value3</tspan></text></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data remove span 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked text value</tspan></text></g><g></g></div>"`;

exports[`appendFittedText Should update correctly Should update correctly if data remove span 2`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g></g></div>"`;

exports[`appendFittedText Should works with text, radius, class parameters as function with data in selection Should render correctly 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g><g><text class="fitted-text mocked_css_class_value2" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.8074017006186525)"><tspan x="0" y="3.6000000000000005">mocked_text_value2</tspan></text></g></div>"`;

exports[`appendFittedText Should works with text, radius, class parameters as function without data in selection Should render correctly 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g></div>"`;

exports[`appendFittedText Should works with text, radius, class parameters as value without data in selection Should render correctly 1`] = `"<div><g><text class="fitted-text mocked_css_class_value" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g></div>"`;

exports[`appendFittedText Should works without class parameters Should render correctly 1`] = `"<div><g><text class="fitted-text" style="text-anchor: middle; font: 10px sans-serif" transform="translate(0,0) scale(4.805693313322127)"><tspan x="0" y="3.6000000000000005">mocked_text_value</tspan></text></g></div>"`;

exports[`extractLines Should works with empty string as text 1`] = `[]`;

exports[`extractLines Should works with integer as text 1`] = `
[
  {
    "text": "0",
    "width": 1,
  },
]
`;

exports[`extractLines Should works with multiple spaces and multiple words as text 1`] = `
[
  {
    "text": "mocked text value",
    "width": 17,
  },
]
`;

exports[`extractLines Should works with multiple words as text 1`] = `
[
  {
    "text": "mocked text value",
    "width": 17,
  },
]
`;

exports[`extractLines Should works with multiple words on same line 1`] = `
[
  {
    "text": "mocked text a",
    "width": 13,
  },
  {
    "text": "value",
    "width": 5,
  },
]
`;

exports[`extractLines Should works with simple word as text 1`] = `
[
  {
    "text": "mockedTextValue",
    "width": 15,
  },
]
`;

exports[`extractLines Should works with undefined as text 1`] = `[]`;

exports[`measureTextWidth Should measure empty text correctly 1`] = `0`;

exports[`measureTextWidth Should measure text correctly 1`] = `15`;

exports[`measureTextWidth Should measure undefined text correctly 1`] = `0`;
